import torch
import torch.nn as nn

class CaptionModel(nn.Module):
    def __init__(self, feat_dim, embed_dim, hidden_dim, vocab_size):
        super().__init__()
        self.embed = nn.Embedding(vocab_size, embed_dim)
        self.lstm = nn.LSTM(embed_dim + feat_dim, hidden_dim, batch_first=True)
        self.fc = nn.Linear(hidden_dim, vocab_size)

    def forward(self, feats, caps):
        embeds = self.embed(caps)
        feats = feats.unsqueeze(1).expand(-1, embeds.size(1), -1)
        x = torch.cat((feats, embeds), dim=2)
        out, _ = self.lstm(x)
        return self.fc(out)

# Create model and save
model = CaptionModel(2048, 256, 512, 11)
torch.save(model.state_dict(), "trained_caption_model.pt")
print("âœ… Dummy model saved as trained_caption_model.pt")
